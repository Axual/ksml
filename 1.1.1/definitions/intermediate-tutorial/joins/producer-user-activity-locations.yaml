functions:
  generate_user_activity:
    type: generator
    globalCode: |
      import random
      import time
      activity_counter = 0
    code: |
      global activity_counter
      
      user_ids = ["user001", "user002", "user003", "user004", "user005"]
      activity_types = ["login", "logout", "page_view", "purchase", "search"]
      
      user_id = random.choice(user_ids)
      activity = {
        "activity_id": f"activity_{activity_counter+1:03d}",
        "user_id": user_id,
        "activity_type": random.choice(activity_types),
        "timestamp": int(time.time() * 1000),
        "session_id": f"session_{user_id}_{random.randint(1, 5)}"
      }
      
      activity_counter += 1
      result = (user_id, activity)
    expression: result
    resultType: (string, json)

  generate_user_locations:
    type: generator
    globalCode: |
      import random
      import time
      location_counter = 0
      user_ids = ["user001", "user002", "user003", "user005"]  # Note: user004 missing
      locations = [
        {"country": "USA", "city": "New York", "timezone": "EST"},
        {"country": "UK", "city": "London", "timezone": "GMT"},
        {"country": "Germany", "city": "Berlin", "timezone": "CET"},
        {"country": "Japan", "city": "Tokyo", "timezone": "JST"}
      ]
    code: |
      global location_counter
      
      if location_counter < len(user_ids):
        user_id = user_ids[location_counter]
        location = random.choice(locations)
        location_data = {
          "user_id": user_id,
          "country": location["country"],
          "city": location["city"],
          "timezone": location["timezone"],
          "updated_at": int(time.time() * 1000)
        }
        
        location_counter += 1
        result = (user_id, location_data)
      else:
        result = None
    expression: result
    resultType: (string, json)

producers:
  user_activity_producer:
    generator: generate_user_activity
    interval: 1s
    to:
      topic: user_activity_events
      keyType: string
      valueType: json

  user_location_producer:
    generator: generate_user_locations
    interval: 2s
    count: 4  # Only 4 users have location data
    to:
      topic: user_location_data
      keyType: string
      valueType: json