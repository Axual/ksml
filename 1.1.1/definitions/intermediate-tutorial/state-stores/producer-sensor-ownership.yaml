functions:
  generate_sensor_data:
    type: generator
    globalCode: |
      import random
      import time
      data_counter = 0
      owners = []
      owners.extend(["alice", "bob", "charlie", "diana", "eve"])
      sensor_types = []
      sensor_types.extend(["temperature", "humidity", "pressure", "light"])
    code: |
      global data_counter, owners, sensor_types
      
      data_counter += 1
      owner = random.choice(owners)
      sensor_type = random.choice(sensor_types)
      sensor_id = sensor_type + "_" + owner + "_" + str(random.randint(1, 3)).zfill(2)
      
      value = {}
      value["sensor_id"] = sensor_id
      value["owner"] = owner
      value["sensor_type"] = sensor_type
      value["value"] = round(random.uniform(10.0, 100.0), 2)
      value["timestamp"] = int(time.time() * 1000)
      
      key = sensor_id
    expression: (key, value)
    resultType: (string, json)

producers:
  sensor_producer:
    generator: generate_sensor_data
    interval: 2s
    to:
      topic: sensor_ownership_data
      keyType: string
      valueType: json