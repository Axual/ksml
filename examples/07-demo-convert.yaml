# This example shows how to read from a simple stream, convert to json and output to a target topic.

streams:
  sensor_source:
    topic: ksml_sensordata_avro
    keyType: string
    valueType: avro:SensorData

functions:
  print_message:
    type: forEach
    code: "print('key=' + str(key) + ', value=' + str(value))"

pipelines:
  # The main pipeline reads messages, converts to json, outputs them, and saves to a target topic
  main_to_json:
    from: sensor_source
    via:
      - type: convertValue
        into: xml
        name: convert_value_to_xml
      - type: peek
        forEach: print_message
    to:
      topic: ksml_sensordata_xml

  # The alternative pipeline achieves the same, but by inlining the target topic definition and its
  # data types (conversion is done implicitly on writing to the target topic)
  alternate_to_json:
    from: sensor_source
    via:
      - type: peek
        forEach: print_message
    to:
      topic: ksml_sensordata_xml
      keyType: string
      valueType: xml
