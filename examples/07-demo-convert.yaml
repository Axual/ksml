# This example shows how to read from a simple stream, convert to json and output to a target topic.

streams:
  sensor_source:
    topic: ksml_sensordata_avro
    keyType: nullable(string)
    valueType: nullable(avro:SensorData)

functions:
  print_message:
    type: forEach
    code: "print('key=' + str(key) + ', value=' + str(value))"

pipelines:
  # The main pipeline reads messages, converts to json, outputs them, and saves to a target topic
  main:
    from: sensor_source
    via:
      - type: convertValue
        into: nullable(json)
        name: convert_value_to_json
      - type: peek
        forEach: print_message
        name: peek_and_print
    to:
      topic: ksml_sensordata_json

  # The secondary pipeline achieves the same, but by inlining the target topic definition and its data types
  secondary:
    from: sensor_source
    via:
      - type: peek
        forEach: print_message
        name: peek_and_print2
    to:
      topic: ksml_sensordata_json
      keyType: nullable(string)
      valueType: nullable(json)
