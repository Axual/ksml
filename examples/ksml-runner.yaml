ksml:
  # The examples directory is mounted to /ksml in the run script
  configDirectory: ./ # When not set defaults to the working directory
  schemaDirectory: ./ # When not set defaults to the config directory
#  storageDirectory: tmp # When not set defaults to the default JVM temp directory
  definitions:
    inspect: 01-example-inspect.yaml
    copy: 02-example-copy.yaml
    filter: 03-example-filter.yaml
    branch: 04-example-branch.yaml
    route: 05-example-route.yaml
    duplicate: 06-example-duplicate.yaml
    convert: 07-example-convert.yaml
    count: 08-example-count.yaml
    aggregate: 09-example-aggregate.yaml
    queryable_table: 10-example-queryable-table.yaml
    field_modification: 11-example-field-modification.yaml
#    byte_manipulation: 12-example-byte-manipulation.yaml
    join: 13-example-join.yaml
    manual_state_store: 14-example-manual-state-store.yaml
#    pipeline_linking: 15-example-pipeline-linking.yaml

# This setup connects to the Kafka broker and schema registry started with the example docker-compose file
# These examples are intended to run from a inside a container on the same network
kafka:
#  bootstrap.servers: broker:9093
  bootstrap.servers: localhost:9092
  application.id: io.ksml.example.streaming
  schema.registry.url: http://localhost.nossl:8081
  security.protocol: PLAINTEXT
  auto.offset.reset: earliest
  acks: all

# These are Kafka SSL configuration properties. Check the documentation at1
# Check the documentation at https://kafka.apache.org/documentation/#producerconfigs for more properties

#  security.protocol: SSL
#  ssl.protocol: TLSv1.3
#  ssl.enabled.protocols: TLSv1.3,TLSv1.2
#  ssl.endpoint.identification.algorithm: ""
#  ssl.keystore.type: JKS
#  ssl.truststore.type: JKS
#  ssl.key.password: xxx
#  ssl.keystore.password: xxx
#  ssl.keystore.location: /path/to/ksml.keystore.jks
#  ssl.truststore.password: xxx
#  ssl.truststore.location: /path/to/ksml.truststore.jks

# Use these configuration properties when connecting to a cluster using the Axual naming patterns.
# These patterns are resolved into the actual name used on Kafka using the values in this configuration map
# and the topic names specified in the definition YAML files


#  tenant: "ksmldemo"
#  instance: "dta"
#  environment: "dev"
#  topic.pattern: "{tenant}-{instance}-{environment}-{topic}"
#  # Results in Kafka topic ksmldemo-dta-dev-<topic name from KSML definition YAML>
#  group.id.pattern: "{tenant}-{instance}-{environment}-{group.id}"
#  transactional.id.pattern: "{tenant}-{instance}-{environment}-{transactional.id}"

