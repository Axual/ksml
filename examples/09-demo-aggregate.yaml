# This example shows how to read from a simple stream, group by owner, apply windows and count owners per window.

streams:
  sensor_source:
    topic: ksml_sensordata_avro
    keyType: string
    valueType: avro:SensorData

functions:
  print_message:
    type: forEach
    code: "print('key=' + str(key) + ', value=' + str(value))"

stores:
  owner_count:
    name: owner_count
    retention: 3m
    caching: false

pipelines:
  main:
    from: sensor_source
    via:
      - type: groupBy
        name: ksml_sensordata_grouped
        mapper:
          expression: value["owner"]
          resultType: string
      - type: windowedBy
        windowType: time
        duration: 20s
        grace: 40s
      - type: aggregate
        store: owner_count
        initializer:
          expression: 0
          resultType: long
        aggregator:
          expression: aggregatedValue+1
          resultType: long
      - type: toStream
      - type: peek
        forEach: print_message
