# This example shows how to read from a simple stream, group by owner, apply windows and count owners per window.

streams:
  sensor_source:
    topic: ksml_sensordata_avro
    keyType: string
    valueType: avro:SensorData

stores:
  owner_count_aggregate:
    type: windowStore
    keyType: string
    valueType: long
    windowSize: 10m
    retention: 1h
    caching: false

pipelines:
  main:
    from: sensor_source
    via:
      - type: groupBy
        name: group_by_owner_before_aggregate
        mapper:
          code: |
            if value == None or not "owner" in value:
              return "no owner"
          expression: value["owner"]
          resultType: string
      - type: windowByTime
        windowType: tumbling
        duration: 20s
      - type: aggregate
        store: owner_count_aggregate
        initializer:
          expression: 0
          resultType: long
        aggregator:
          expression: aggregatedValue+1
      - type: toStream
      - type: peek
        forEach:
          code: log.info("AGGREGATE - key={}, value={}", key, value)
