# $schema: https://raw.githubusercontent.com/Axual/ksml/main/docs/ksml-language-spec.json

# This example shows how to generate data and have it sent to a target topic in a given format.

functions:
  generate_sensordata_message:
    type: generator
    globalCode: |
      import time
      import random
      sensorCounter = 0
    code: |
      global sensorCounter

      key = "sensor"+str(sensorCounter)           # Set the key to return ("sensor0" to "sensor9")
      sensorCounter = (sensorCounter+1) % 10      # Increase the counter for next iteration

      # Generate some random sensor measurement data
      types = { 0: { "type": "AREA", "unit": random.choice([ "m2", "ft2" ]), "value": str(random.randrange(1000)) },
                1: { "type": "HUMIDITY", "unit": random.choice([ "g/m3", "%" ]), "value": str(random.randrange(100)) },
                2: { "type": "LENGTH", "unit": random.choice([ "m", "ft" ]), "value": str(random.randrange(1000)) },
                3: { "type": "STATE", "unit": "state", "value": random.choice([ "off", "on" ]) },
                4: { "type": "TEMPERATURE", "unit": random.choice([ "C", "F" ]), "value": str(random.randrange(-100, 100)) }
              }

      # Build the result value using any of the above measurement types
      value = { "name": key, "timestamp": str(round(time.time()*1000)), **random.choice(types) }
      value["color"] = random.choice([ "black", "blue", "red", "yellow", "white" ])
      value["owner"] = random.choice([ "Alice", "Bob", "Charlie", "Dave", "Evan" ])
      value["city"] = random.choice([ "Amsterdam", "Xanten", "Utrecht", "Alkmaar", "Leiden" ])
      
      if random.randrange(10) == 0:
        key = None
      if random.randrange(10) == 0:
        value = None
    expression: (key, value)                      # Return a message tuple with the key and value
    resultType: (string, json)                    # Indicate the type of key and value

producers:
  sensordata_avro_producer:
    generator: generate_sensordata_message
    interval: 3s
    to:
      topic: ksml_sensordata_avro
      keyType: string
      valueType: avro:SensorData

  sensordata_protobuf_producer:
    generator: generate_sensordata_message
    interval: 3s
    to:
      topic: ksml_sensordata_protobuf
      keyType: string
      valueType: protobuf:SensorDataProtobuf
