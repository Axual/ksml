streams:
  csv_input:
    topic: ksml_sensordata_csv
    keyType: string
    valueType: csv:SensorData
    offsetResetPolicy: latest

  csv_output:
    topic: ksml_sensordata_csv_processed
    keyType: string
    valueType: csv:SensorData

functions:
  uppercase_city:
    type: valueTransformer
    code: |
      # When using csv:SensorData, the data comes as a structured object (dict)
      if value and isinstance(value, dict):
        # Create a copy and uppercase the city
        enriched = dict(value)
        if "city" in enriched:
          enriched["city"] = enriched["city"].upper()
        result = enriched
      else:
        result = value
    expression: result
    resultType: csv:SensorData

pipelines:
  process_csv:
    from: csv_input
    via:
      # Log the original CSV data
      - type: peek
        forEach:
          code: |
            if value:
              log.info("Original: sensor={}, city={}", value.get("name"), value.get("city"))

      # Transform the CSV data - uppercase city
      - type: transformValue
        mapper: uppercase_city

      # Log the transformed CSV data
      - type: peek
        forEach:
          code: |
            if value:
              log.info("Transformed: sensor={}, city={}", value.get("name"), value.get("city"))

    to: csv_output