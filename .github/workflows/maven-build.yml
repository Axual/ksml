name: Maven Build and Test

on:
  workflow_call:
    inputs:
      run-integration-tests:
        description: 'Run integration tests (requires TestContainers/Docker)'
        type: boolean
        default: false
    outputs:
      artifact-name:
        description: "Name of the uploaded build artifact"
        value: ${{ jobs.build.outputs.artifact-name }}
  workflow_dispatch:
    inputs:
      run-integration-tests:
        description: 'Run integration tests (requires TestContainers/Docker)'
        type: boolean
        default: false
  push:
    branches:
      - 'main'
      - 'release/**'
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and test with GraalVM
    runs-on: ubuntu-latest
    outputs:
      artifact-name: build-artifacts-${{ github.sha }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up GraalVM
        uses: actions/setup-java@v4
        with:
          distribution: 'graalvm'
          java-version: '23'
          cache: 'maven'

      - name: Build and run unit tests
        run: mvn clean test --no-transfer-progress

      - name: Publish unit test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: '**/target/surefire-reports/TEST-*.xml'
          check_name: 'Unit Test Results'

      - name: Package (skip tests - already ran)
        run: mvn package -DskipTests --no-transfer-progress

      # Integration tests with TestContainers (conditional)
      - name: Run integration tests with TestContainers
        if: ${{ inputs.run-integration-tests }}
        run: mvn verify -DskipTests -DskipITs=false --no-transfer-progress
        env:
          # TestContainers configuration for GitHub Actions
          TESTCONTAINERS_RYUK_DISABLED: false

      - name: Publish integration test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: ${{ always() && inputs.run-integration-tests }}
        with:
          files: '**/target/failsafe-reports/TEST-*.xml'
          check_name: 'Integration Test Results'

      # Optional: SonarQube scan
      # Only run on main/release branches or PRs from the same repo (not forks)
      - name: SonarQube Scan
        if: ${{ github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository }}
        continue-on-error: true
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          if [ -n "$SONAR_TOKEN" ]; then
            echo "Running SonarQube scan..."
            mvn sonar:sonar \
              -Dsonar.projectKey=Axual_ksml \
              -Dsonar.organization=axual \
              -Dsonar.host.url=https://sonarcloud.io \
              --no-transfer-progress
          else
            echo "SONAR_TOKEN not set, skipping SonarQube scan"
          fi

      - name: Prepare build artifacts
        run: |
          mkdir -p build-output
          cp ksml-runner/target/ksml-runner*.jar build-output/
          cp -r ksml-runner/target/libs build-output/
          cp ksml-runner/NOTICE.txt build-output/
          cp LICENSE.txt build-output/

      - name: Upload build artifacts
        id: upload
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ github.sha }}
          path: build-output/
          retention-days: 7
