functions:
  generate_order:
    type: generator
    globalCode: |
      import random
      import time
      order_counter = 0
      customers = ["CUST001", "CUST002", "CUST003", "CUST004", "CUST005"]
      products = ["PROD001", "PROD002", "PROD003", "PROD004", "PROD005"]
    code: |
      global order_counter, customers, products
      
      order_counter += 1
      order_id = f"ORD{order_counter:04d}"
      customer_id = random.choice(customers)
      product_id = random.choice(products)
      
      # Generate order with product_id for foreign key join
      value = {
        "order_id": order_id,
        "customer_id": customer_id,
        "product_id": product_id,
        "quantity": random.randint(1, 5),
        "timestamp": int(time.time() * 1000)
      }
      
      # Use order_id as key (natural key for orders)
      key = order_id
    expression: (key, value)
    resultType: (string, json)

  generate_product:
    type: generator
    globalCode: |
      import random
      products_data = [
        {"id": "PROD001", "name": "Laptop", "category": "Electronics", "price": 999.99},
        {"id": "PROD002", "name": "Headphones", "category": "Electronics", "price": 149.99},
        {"id": "PROD003", "name": "Coffee Maker", "category": "Appliances", "price": 79.99},
        {"id": "PROD004", "name": "Backpack", "category": "Accessories", "price": 49.99},
        {"id": "PROD005", "name": "Desk Lamp", "category": "Furniture", "price": 39.99}
      ]
      product_index = 0
    code: |
      global products_data, product_index
      
      # Cycle through products to populate the global table
      product = products_data[product_index % len(products_data)]
      product_index += 1
      
      value = {
        "name": product["name"],
        "category": product["category"],
        "price": product["price"],
        "in_stock": True
      }
      
      # Product ID as key for the global table
      key = product["id"]
    expression: (key, value)
    resultType: (string, json)

producers:
  order_producer:
    generator: generate_order
    interval: 2s
    to:
      topic: new_orders
      keyType: string
      valueType: json

  product_producer:
    generator: generate_product
    interval: 10s
    to:
      topic: product_catalog
      keyType: string
      valueType: json