# $schema: https://raw.githubusercontent.com/Axual/ksml/refs/heads/release/1.0.x/docs/ksml-language-spec.json

# Producer for circuit breaker pattern - generates API requests with various conditions

functions:
  generate_api_requests:
    type: generator
    globalCode: |
      import random
      import time
      data_counter = 0
      request_types = []
      request_types.extend(["user_lookup", "payment_process", "inventory_check", "failing_service", "timeout_service"])
      customers = []
      customers.extend(["customer_001", "customer_002", "customer_003", "customer_004", "customer_005"])
    code: |
      global data_counter, request_types, customers
      
      data_counter += 1
      
      request_type = random.choice(request_types)
      customer_id = random.choice(customers)
      
      # Create different request scenarios for circuit breaker testing
      request = {}
      request["request_id"] = f"req_{data_counter:04d}"
      request["customer_id"] = customer_id
      request["request_type"] = request_type
      request["timestamp"] = int(time.time() * 1000)
      
      # Add specific parameters based on request type
      if request_type == "user_lookup":
        request["user_id"] = customer_id
        request["fields"] = ["profile", "preferences"]
      elif request_type == "payment_process":
        request["amount"] = round(random.uniform(10.0, 500.0), 2)
        request["payment_method"] = "credit_card"
      elif request_type == "inventory_check":
        request["product_id"] = f"product_{random.randint(1, 100):03d}"
        request["quantity"] = random.randint(1, 10)
      elif request_type == "failing_service":
        # This will trigger circuit breaker failures
        request["service"] = "external_api"
        request["expected_failure"] = True
      elif request_type == "timeout_service":
        # This will cause timeouts
        request["service"] = "slow_api"
        request["timeout_risk"] = True
        request["expected_delay"] = random.randint(5000, 15000)  # 5-15 second delay
      
      key = request["request_id"]
      
    expression: (key, request)
    resultType: (string, json)

producers:
  api_request_producer:
    generator: generate_api_requests
    interval: 2s
    to:
      topic: api_requests
      keyType: string
      valueType: json