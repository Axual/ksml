# Processor for logging and monitoring tutorial  
# Demonstrates basic logging levels using the log object

streams:
  log_input:
    topic: ksml_logging_input
    keyType: string
    valueType: json
  log_output:
    topic: ksml_logging_output
    keyType: string
    valueType: json

functions:
  log_message:
    type: forEach
    code: |
      # Test TRACE logging
      log.trace("TRACE: Processing message with key={}", key)
      
      level = value.get("level", "INFO")
      message = value.get("message", "")
      component = value.get("component", "unknown")
      
      # Test DEBUG logging
      log.debug("DEBUG: Message details - level={}, component={}", level, component)
      
      if level == "ERROR":
        log.error("[{}] {}", component, message)
      elif level == "WARN":  
        log.warn("[{}] {}", component, message)
      elif level == "DEBUG":
        log.debug("[{}] {}", component, message) 
      else:
        log.info("[{}] {}", component, message)

pipelines:
  logging_pipeline:
    from: log_input
    via:
      - type: peek
        forEach:
          code: log_message(key, value)
    to: log_output