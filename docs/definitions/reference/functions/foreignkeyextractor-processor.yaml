streams:
  orders_input:
    topic: orders
    keyType: string
    valueType: json
    
tables:
  customers_table:
    topic: customers
    keyType: string
    valueType: json

functions:
  # Extract customer_id from order value to join with customers table
  extract_customer_id:
    type: foreignKeyExtractor
    code: |
      # Extract the foreign key (customer_id) from the order value
      # This key will be used to look up the customer in the customers table
      if value is None:
        return None
      
      customer_id = value.get("customer_id")
      log.debug("Extracting customer_id: {} from order", customer_id)
      return customer_id
    resultType: string
    
  # Join order with customer data
  join_order_customer:
    type: valueJoiner
    code: |
      # value1 is the order, value2 is the customer
      order = value1
      customer = value2
      
      if order is None:
        return None
        
      # Create enriched order with customer information
      enriched_order = {
        "order_id": order.get("order_id"),
        "product": order.get("product"),
        "amount": order.get("amount"),
        "timestamp": order.get("timestamp"),
        "customer": {
          "customer_id": order.get("customer_id"),
          "name": customer.get("name", "Unknown") if customer else "Unknown",
          "email": customer.get("email", "Unknown") if customer else "Unknown",
          "tier": customer.get("tier", "Unknown") if customer else "Unknown"
        }
      }
      
      log.info("Joined order {} with customer {}", 
               order.get("order_id"), 
               customer.get("name") if customer else "Unknown")
      
      return enriched_order
    resultType: json

pipelines:
  enrich_orders:
    from: orders_input
    via:
      # Join orders table with customers table using foreignKeyExtractor
      - type: join
        table: customers_table
        foreignKeyExtractor: extract_customer_id  # Extracts customer_id from order
        valueJoiner: join_order_customer
      - type: peek
        forEach:
          code: |
            log.info("Enriched order: {} for customer: {}", 
                     value.get("order_id"), 
                     value.get("customer", {}).get("name"))
    to:
      topic: enriched_orders
      keyType: string  # Still keyed by order_id
      valueType: json