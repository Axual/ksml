# Demonstrates union data type usage in KSML
streams:
  optional_messages:
    topic: optional_messages
    keyType: string
    valueType: json  # Using JSON for Kafka serialization

functions:
  generate_optional_message:
    type: generator
    globalCode: |
      import time
      import random
      message_id = 1
      
      def get_optional_message():
        global message_id
        # Generate union type: either a message or null
        if random.random() > 0.3:  # 70% chance of message
          message = {
            "id": message_id,
            "content": f"Message {message_id}",
            "timestamp": int(time.time() * 1000)
          }
        else:  # 30% chance of null
          message = None
        
        key = f"MSG_{message_id:04d}"
        message_id += 1
        return (key, message)
    code: |
      return get_optional_message()
    resultType: "(string, union(null, json))"  # Function returns union type

producers:
  optional_producer:
    to: optional_messages
    interval: 2000  # Generate message every 2 seconds
    generator: generate_optional_message