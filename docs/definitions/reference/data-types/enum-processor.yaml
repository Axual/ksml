# Demonstrates enum data type usage and validation in KSML
streams:
  order_events:
    topic: order_events
    keyType: string
    valueType: json
  
  # Stream with enum type for order status
  # Enum values are represented as strings with validation
  order_status_stream:
    topic: order_statuses
    keyType: string
    valueType: "enum(PENDING, PROCESSING, SHIPPED, DELIVERED, CANCELLED)"

functions:
  extract_and_validate_status:
    type: valueTransformer
    resultType: string
    code: |
      # Extract status from order event
      # In Python, enum values are always represented as strings
      status = value.get("status", "PENDING")
      
      # Validate against allowed enum values
      valid_statuses = ["PENDING", "PROCESSING", "SHIPPED", "DELIVERED", "CANCELLED"]
      if status in valid_statuses:
        return status
      else:
        # Return default if invalid
        return "PENDING"

pipelines:
  # Process orders and extract enum status
  process_order_status:
    from: order_events
    via:
      # Transform JSON value to validated enum string
      - type: transformValue
        mapper: extract_and_validate_status
      - type: peek
        forEach:
          code: |
            log.info("Order {} has status: {}", key, value)
    to: order_status_stream