# Demonstrates windowed type usage in KSML
# 
# This example shows how to use the windowed(<base_type>) syntax with convertKey operation.
# After windowing operations, KSML internally uses windowed keys.
#
# RECOMMENDED APPROACH:
# Use a notation prefix like 'json:windowed(string)' or 'avro:windowed(string)' instead of
# plain 'windowed(string)'. The notation automatically handles serialization of the windowed
# key structure (start, end, startTime, endTime, key) to the specified format, allowing you
# to write directly to Kafka topics without manual transformation.
#
# Example: 
#   - type: convertKey
#     into: "json:windowed(string)"  # Automatically serializes as JSON structure
#
# Without notation, windowed keys cannot be serialized to Kafka topics and require manual
# transformation to regular types.
streams:
  user_events:
    topic: user_events
    keyType: string
    valueType: json  # Input events
  
  # Output stream with JSON-serialized windowed keys
  windowed_counts:
    topic: windowed_counts  
    keyType: json  # JSON notation automatically serializes the windowed key structure
    valueType: long  # Simple count value

stores:
  event_counts_store:
    type: window
    retention: 1m  # Keep window data for 1 minute
    keyType: string
    valueType: long

pipelines:
  count_events_by_window:
    from: user_events
    via:
      # Group by key (user) for counting
      - type: groupByKey
      
      # Apply a 10-second tumbling window
      - type: windowByTime
        windowType: tumbling
        duration: 10s
      
      # Count events in each window
      - type: count
        store: event_counts_store
      
      # Convert to stream for processing
      - type: toStream
      
      # DEMONSTRATES windowed(<base_type>) USAGE WITH NOTATION:
      # Using json:windowed(string) automatically serializes windowed keys as JSON structures
      # containing: start, end, startTime, endTime, and key fields
      - type: convertKey
        into: "json:windowed(string)"  # Recommended: use notation prefix for automatic serialization
      
      # Log the windowed counts
      - type: peek
        forEach:
          code: |
            log.info("JSON Windowed key - User {} had {} events in window [{} - {}]", 
                     key['key'], value, key['startTime'], key['endTime'])
    
    # Now we can write to the topic with regular string keys
    to: windowed_counts