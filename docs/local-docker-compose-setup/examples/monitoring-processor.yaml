# Processor for monitoring operations with message counting and timing
# Demonstrates peek operations for monitoring without modifying data

streams:
  monitor_input:
    topic: ksml_logging_input  
    keyType: string
    valueType: json
  monitor_output:
    topic: ksml_monitoring_output
    keyType: string
    valueType: json

functions:
  count_messages:
    type: forEach
    code: |
      global message_count
      if 'message_count' not in globals():
        message_count = 0
      message_count += 1
      if message_count % 5 == 0:
        log.info("Processed {} messages so far", message_count)

  monitor_errors:
    type: forEach  
    code: |
      if value.get("level") == "ERROR":
        log.error("Error message detected - Component: {}, Message: {}", 
                 value.get("component"), value.get("message"))

pipelines:
  monitoring_pipeline:
    from: monitor_input
    via:
      - type: peek
        forEach:
          functionRef: count_messages
      - type: peek
        forEach:
          functionRef: monitor_errors  
      - type: peek
        forEach:
          code: |
            if value.get("importance", 0) > 8:
              log.warn("Critical importance message: {}", value.get("message"))
    to: monitor_output