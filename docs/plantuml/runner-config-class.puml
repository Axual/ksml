@startuml

' see https://plantuml.com/class-diagram

package io.axual.ksml.runner.config {

  class KSMLRunnerConfig {
  	+ getConfiguredBackend(): Backend
  }

  class KSMLRunnerBackendConfig {
  	-config: JSONNode
  	-type: String
  	+validate(): void
  	+getType(): String
  }

  class KSMLConfig

}

package io.axual.ksml {
  class "KSMLConfig" as ksmlconfig2
  note bottom of ksmlconfig2: duplicated name
}

class KSMLRunner {}



interface BackendConfig {
	+validate(): void
}


KSMLRunnerConfig --> KSMLConfig
KSMLRunnerConfig --> KSMLRunnerBackendConfig
KSMLRunnerBackendConfig --> JSONNode
note bottom of JSONNode: will be stringified and re-parsed as either\nKafkaBackendConfig or AxualBackendConfig\nby KSMLRunnerConfig.getConfiguredBackend()
JSONNode <. KafkaBackendConfig
JSONNode <. AxualBackendConfig

BackendConfig <|-- KafkaBackendConfig
BackendConfig <|-- AxualBackendConfig

KSMLRunner -> KSMLRunnerConfig: creates

@enduml