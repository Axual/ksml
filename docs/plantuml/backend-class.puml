@startuml

interface Runnable {
	+run(): void
}

interface AutoCloseable {
	+close(): void
}

package ksml <<Rectangle>> {

	interface Backend {
		+getState(): State
		+getQuerier(): StreamsQuerier
		+default convertStreamsState(): State
	}

	interface StreamsQuerier {
		+allMetaDataForStore(String): Collection<StreamsMetadata>
		+queryMetadataForKey(String, K, Serializer<K>): KeyQueryMetadata
		+store(StoreQueryParameters<T>): T
	}

	class KafkaBackend {
		-kafkaStreams: KafkaStreams
		+getQuerier(): StreamsQuerier
	}

	class AxualBackend {
		-axualStreams: AxualStreams
		+getQuerier(): StreamsQuerier
	}

	enum State {
		+STARTING
		+STARTED
		+STOPPING
		+STOPPED
		+FAILED
	}
}

Backend +- State

Runnable <|-- Backend
AutoCloseable <|-- Backend

Backend <|-- KafkaBackend
Backend <|-- AxualBackend

@enduml