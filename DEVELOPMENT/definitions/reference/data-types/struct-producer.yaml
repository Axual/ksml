# Demonstrates struct data type usage in KSML
streams:
  user_profiles:
    topic: user_profiles
    keyType: string
    valueType: struct  # Using struct value type

functions:
  generate_user_profile:
    type: generator
    globalCode: |
      import time
      
      user_id = 1
      
      def get_user_profile():
        global user_id
        # Create a struct (dictionary) for user profile
        profile = {
          "user_id": f"USER_{user_id:03d}",
          "name": f"User Name {user_id}",
          "age": 20 + (user_id % 50),
          "email": f"user{user_id}@example.com",
          "preferences": {
            "newsletter": user_id % 2 == 0,
            "notifications": user_id % 3 != 0
          },
          "created_at": int(time.time() * 1000)
        }
        user_id = (user_id % 5) + 1  # Cycle through 5 users
        return profile
    code: |
      profile = get_user_profile()
      return (profile["user_id"], profile)
    resultType: (string, struct)  # Returning struct type

producers:
  profile_producer:
    to: user_profiles
    interval: 3000  # Generate profile every 3 seconds
    generator: generate_user_profile