# Producer for API enrichment demo - generates user events that need external data

functions:
  generate_user_events:
    type: generator
    globalCode: |
      import random
      import time
      event_counter = 0
      user_ids = ["user_001", "user_002", "user_003", "user_004", "user_005"]
      event_types = ["login", "view_product", "add_to_cart", "purchase"]
    code: |
      global event_counter, user_ids, event_types
      
      event_counter += 1
      user_id = random.choice(user_ids)
      event_type = random.choice(event_types)
      
      # Create structured JSON user event for better readability in Kowl UI
      user_event = {
        "event_id": f"event_{event_counter:06d}",
        "event_type": event_type,
        "user_id": user_id,
        "timestamp": int(time.time() * 1000),
        "sequence_number": event_counter,
        "session_id": f"session_{user_id}_{event_counter // 5}",  # Change session every 5 events
        "device_info": {
          "platform": random.choice(["web", "mobile", "tablet"]),
          "user_agent": random.choice(["Chrome", "Firefox", "Safari", "Edge"]),
          "ip_address": f"192.168.1.{random.randint(1, 255)}"
        },
        "context": {
          "page_url": random.choice(["/home", "/products", "/cart", "/checkout"]),
          "referrer": random.choice([None, "google.com", "facebook.com", "direct"]),
          "campaign": random.choice([None, "summer_sale", "new_user", "retargeting"])
        },
        "metadata": {
          "simulation": True,
          "api_enrichment": True,
          "needs_external_data": True
        }
      }
      
    expression: (f"event_{event_counter:06d}", user_event)
    resultType: (string, json)

producers:
  user_event_producer:
    generator: generate_user_events
    interval: 3s
    to:
      topic: user_events
      keyType: string
      valueType: json