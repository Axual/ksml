<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.axual.ksml</groupId>
    <artifactId>ksml-parent</artifactId>
    <version>1.1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <licenses>
        <license>
            <name>Apache 2.0</name>
            <url>http://www.apache.org/licenses/license-2.0.txt</url>
            <distribution>repo</distribution>
            <comments>A business-friendly OSS license</comments>
        </license>
    </licenses>

    <organization>
        <name>Axual B.V.</name>
        <url>https://axual.com/</url>
    </organization>

    <description>
        KSML allows developers to define Kafka Streams topologies using YAML and Python.
    </description>

    <url>https://github.com/Axual/ksml</url>
    <inceptionYear>2021</inceptionYear>

    <developers>
        <developer>
            <name>Team Axual</name>
            <email>info@axual.com</email>
            <organization>Axual B.V.</organization>
            <organizationUrl>https://axual.com</organizationUrl>
        </developer>
    </developers>

    <repositories>
        <repository>
            <id>Confluent</id>
            <url>https://packages.confluent.io/maven/</url>
        </repository>
    </repositories>

    <modules>
        <module>ksml-data</module>
        <module>ksml-data-avro</module>
        <module>ksml-data-avro-apicurio</module>
        <module>ksml-data-avro-confluent</module>
        <module>ksml-data-binary</module>
        <module>ksml-data-csv</module>
        <module>ksml-data-json</module>
        <module>ksml-data-jsonschema</module>
        <module>ksml-data-jsonschema-apicurio</module>
        <module>ksml-data-jsonschema-confluent</module>
        <module>ksml-data-protobuf</module>
        <module>ksml-data-protobuf-apicurio</module>
        <module>ksml-data-protobuf-confluent</module>
        <module>ksml-data-soap</module>
        <module>ksml-data-xml</module>
        <module>ksml</module>
        <module>ksml-query</module>
        <module>ksml-kafka-clients</module>
        <module>ksml-runner</module>
        <module>ksml-reporting</module>
    </modules>

    <properties>
        <!-- Compile, runtime and provided dependency versions -->
        <apache.avro.version>1.12.0</apache.avro.version>
        <apache.commons.compress.version>1.28.0</apache.commons.compress.version>
        <apache.commons.text.version>1.14.0</apache.commons.text.version>
        <apache.kafka.version>4.0.0</apache.kafka.version>
        <apicurio.version>2.6.13.Final</apicurio.version>
        <axual.utils.version>1.0.0</axual.utils.version>
        <confluent.version>8.0.0</confluent.version>
        <dropwizard.version>4.2.33</dropwizard.version>
        <findbugs.jsr305.version>3.0.2</findbugs.jsr305.version>
        <graalvm.version>24.2.2</graalvm.version>
        <guava.version>33.4.8-jre</guava.version>
        <jackson.version>2.20.0</jackson.version>
        <jakarta.soap.version>3.0.2</jakarta.soap.version>
        <janino.version>3.1.12</janino.version>
        <jersey.version>3.1.11</jersey.version>
        <logback.version>1.5.18</logback.version>
        <logstash-logback-encoder.version>8.1</logstash-logback-encoder.version>
        <lombok.version>1.18.38</lombok.version>
        <prometheus.version>1.0.1</prometheus.version>
        <prometheus-instrumentation.version>1.4.1</prometheus-instrumentation.version>
        <protobuf.version>3.25.8</protobuf.version>
        <saaj.version>3.0.4</saaj.version>
        <slf4j.version>2.1.0-alpha1</slf4j.version>
        <wire.version>5.2.0</wire.version>

        <!-- Test dependency versions -->
        <assertj.version>3.27.4</assertj.version>
        <awaitility.version>4.3.0</awaitility.version>
        <hamcrest.version>3.0</hamcrest.version>
        <junit-pioneer.version>2.3.0</junit-pioneer.version>
        <junit.version>5.13.4</junit.version>
        <mockito-core.version>5.19.0</mockito-core.version>
        <mockito-junit-jupiter.version>5.19.0</mockito-junit-jupiter.version>

        <!-- Project and java version settings -->
        <java.source.version>21</java.source.version>
        <java.target.version>21</java.target.version>
        <java.release.version>21</java.release.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- Maven plugin versions -->
        <maven.dependency.plugin.version>3.8.1</maven.dependency.plugin.version>
        <maven.compiler.plugin.version>3.14.0</maven.compiler.plugin.version>
        <maven.enforcer.plugin.version>3.6.1</maven.enforcer.plugin.version>
        <maven.exec.plugin.version>3.5.1</maven.exec.plugin.version>
        <maven.failsafe.plugin.version>3.5.3</maven.failsafe.plugin.version>
        <maven.install.plugin.version>3.1.4</maven.install.plugin.version>
        <maven.jacoco.plugin.version>0.8.13</maven.jacoco.plugin.version>
        <maven.jar.plugin.version>3.4.2</maven.jar.plugin.version>
        <maven.javadoc.plugin.version>3.11.3</maven.javadoc.plugin.version>
        <maven.license.plugin.version>2.6.0</maven.license.plugin.version>
        <maven.surefire.plugin.version>3.5.3</maven.surefire.plugin.version>
        <maven.resources.plugin.version>3.3.1</maven.resources.plugin.version>
        <maven.versions.plugin.version>2.18.0</maven.versions.plugin.version>

        <!-- Following properties filled at build time by jacoco -->
        <surefireArgLine/>
        <failsafeArgLine/>

        <!-- License properties -->
        <license.licensename>apache_v2</license.licensename>

        <!-- SonarCloud properties -->
        <sonar.organization>axual</sonar.organization>
        <sonar.host.url>https://sonarcloud.io</sonar.host.url>

        <!-- Sonar for JACOCO-->
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
        <sonar.jacoco.xmlReportPaths>ksml/target/site/jacoco/jacoco.xml</sonar.jacoco.xmlReportPaths>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- project dependencies -->
            <dependency>
                <groupId>io.axual.ksml</groupId>
                <artifactId>ksml-data</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.axual.ksml</groupId>
                <artifactId>ksml-data-avro</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.axual.ksml</groupId>
                <artifactId>ksml-data-avro-apicurio</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.axual.ksml</groupId>
                <artifactId>ksml-data-avro-confluent</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.axual.ksml</groupId>
                <artifactId>ksml-data-binary</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.axual.ksml</groupId>
                <artifactId>ksml-data-csv</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.axual.ksml</groupId>
                <artifactId>ksml-data-json</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.axual.ksml</groupId>
                <artifactId>ksml-data-jsonschema</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.axual.ksml</groupId>
                <artifactId>ksml-data-jsonschema-apicurio</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.axual.ksml</groupId>
                <artifactId>ksml-data-jsonschema-confluent</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.axual.ksml</groupId>
                <artifactId>ksml-data-protobuf</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.axual.ksml</groupId>
                <artifactId>ksml-data-protobuf-apicurio</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.axual.ksml</groupId>
                <artifactId>ksml-data-protobuf-confluent</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.axual.ksml</groupId>
                <artifactId>ksml-data-soap</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.axual.ksml</groupId>
                <artifactId>ksml-data-xml</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.axual.ksml</groupId>
                <artifactId>ksml</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.axual.ksml</groupId>
                <artifactId>ksml-query</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.axual.ksml</groupId>
                <artifactId>ksml-kafka-clients</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.axual.ksml</groupId>
                <artifactId>ksml-runner</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.graalvm.polyglot</groupId>
                <artifactId>polyglot</artifactId>
                <version>${graalvm.version}</version>
            </dependency>
            <dependency>
                <groupId>org.graalvm.python</groupId>
                <artifactId>python-language</artifactId>
                <version>${graalvm.version}</version>
            </dependency>
            <dependency>
                <groupId>org.graalvm.python</groupId>
                <artifactId>python-resources</artifactId>
                <version>${graalvm.version}</version>
            </dependency>
            <dependency>
                <groupId>org.graalvm.truffle</groupId>
                <artifactId>truffle-runtime</artifactId>
                <version>${graalvm.version}</version>
            </dependency>
            <dependency>
                <groupId>org.graalvm.truffle</groupId>
                <artifactId>truffle-api</artifactId>
                <version>${graalvm.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-text</artifactId>
                <version>${apache.commons.text.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-compress</artifactId>
                <version>${apache.commons.compress.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.avro</groupId>
                <artifactId>avro</artifactId>
                <version>${apache.avro.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.protobuf</groupId>
                <artifactId>protobuf-java</artifactId>
                <version>${protobuf.version}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.wire</groupId>
                <artifactId>wire-schema-jvm</artifactId>
                <version>${wire.version}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.wire</groupId>
                <artifactId>wire-schema</artifactId>
                <version>${wire.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-clients</artifactId>
                <version>${apache.kafka.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-streams</artifactId>
                <version>${apache.kafka.version}</version>
            </dependency>

            <dependency>
                <groupId>io.apicurio</groupId>
                <artifactId>apicurio-registry-serdes-avro-serde</artifactId>
                <version>${apicurio.version}</version>
            </dependency>
            <dependency>
                <groupId>io.apicurio</groupId>
                <artifactId>apicurio-registry-serdes-jsonschema-serde</artifactId>
                <version>${apicurio.version}</version>
            </dependency>
            <dependency>
                <groupId>io.apicurio</groupId>
                <artifactId>apicurio-registry-protobuf-schema-utilities</artifactId>
                <version>${apicurio.version}</version>
            </dependency>
            <dependency>
                <groupId>io.apicurio</groupId>
                <artifactId>apicurio-registry-schema-resolver</artifactId>
                <version>${apicurio.version}</version>
            </dependency>
            <dependency>
                <groupId>io.confluent</groupId>
                <artifactId>kafka-avro-serializer</artifactId>
                <version>${confluent.version}</version>
            </dependency>
            <dependency>
                <groupId>io.confluent</groupId>
                <artifactId>kafka-json-schema-serializer</artifactId>
                <version>${confluent.version}</version>
            </dependency>
            <dependency>
                <groupId>io.confluent</groupId>
                <artifactId>kafka-protobuf-serializer</artifactId>
                <version>${confluent.version}</version>
            </dependency>

            <dependency>
                <groupId>io.apicurio</groupId>
                <artifactId>apicurio-registry-serdes-protobuf-serde</artifactId>
                <version>${apicurio.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-csv</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-xml</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-yaml</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.jakarta.rs</groupId>
                <artifactId>jackson-jakarta-rs-json-provider</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.xml.soap</groupId>
                <artifactId>jakarta.xml.soap-api</artifactId>
                <version>${jakarta.soap.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sun.xml.messaging.saaj</groupId>
                <artifactId>saaj-impl</artifactId>
                <version>${saaj.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.containers</groupId>
                <artifactId>jersey-container-grizzly2-servlet</artifactId>
                <version>${jersey.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.core</groupId>
                <artifactId>jersey-common</artifactId>
                <version>${jersey.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.core</groupId>
                <artifactId>jersey-client</artifactId>
                <version>${jersey.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.inject</groupId>
                <artifactId>jersey-hk2</artifactId>
                <version>${jersey.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.media</groupId>
                <artifactId>jersey-media-json-jackson</artifactId>
                <version>${jersey.version}</version>
            </dependency>

            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-simple</artifactId>
                <version>${slf4j.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>net.logstash.logback</groupId>
                <artifactId>logstash-logback-encoder</artifactId>
                <version>${logstash-logback-encoder.version}</version>
            </dependency>
            <dependency>
                <groupId>org.codehaus.janino</groupId>
                <artifactId>janino</artifactId>
                <version>${janino.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.code.findbugs</groupId>
                <artifactId>jsr305</artifactId>
                <version>${findbugs.jsr305.version}</version>
            </dependency>
            <dependency>
                <groupId>io.axual.utils</groupId>
                <artifactId>axual-header-cleaning</artifactId>
                <version>${axual.utils.version}</version>
            </dependency>
            <dependency>
                <groupId>io.dropwizard.metrics</groupId>
                <artifactId>metrics-jmx</artifactId>
                <version>${dropwizard.version}</version>
            </dependency>
            <dependency>
                <groupId>io.prometheus.jmx</groupId>
                <artifactId>collector</artifactId>
                <version>${prometheus.version}</version>
            </dependency>
            <dependency>
                <groupId>io.prometheus.jmx</groupId>
                <artifactId>jmx_prometheus_common</artifactId>
                <version>${prometheus.version}</version>
            </dependency>
            <dependency>
                <groupId>io.prometheus</groupId>
                <artifactId>prometheus-metrics-instrumentation-jvm</artifactId>
                <version>${prometheus-instrumentation.version}</version>
            </dependency>

            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${junit.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.junit-pioneer</groupId>
                <artifactId>junit-pioneer</artifactId>
                <version>${junit-pioneer.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito-core.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-junit-jupiter</artifactId>
                <version>${mockito-junit-jupiter.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-library</artifactId>
                <version>${hamcrest.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-bom</artifactId>
                <version>${assertj.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.awaitility</groupId>
                <artifactId>awaitility</artifactId>
                <version>${awaitility.version}</version>
                <scope>test</scope>
            </dependency>


            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-streams-test-utils</artifactId>
                <version>${apache.kafka.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven.compiler.plugin.version}</version>
                    <configuration>
                        <source>${java.source.version}</source>
                        <target>${java.target.version}</target>
                        <compilerArgs>
                            <arg>-Xlint:none</arg>
                        </compilerArgs>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven.dependency.plugin.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>go-offline</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven.surefire.plugin.version}</version>
                    <configuration>
                        <argLine>${surefireArgLine}</argLine>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${maven.failsafe.plugin.version}</version>
                    <configuration>
                        <argLine>${failsafeArgLine}</argLine>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>${maven.install.plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.avro</groupId>
                    <artifactId>avro-maven-plugin</artifactId>
                    <version>${apache.avro.version}</version>
                    <executions>
                        <execution>
                            <phase>generate-sources</phase>
                            <goals>
                                <goal>schema</goal>
                            </goals>
                            <configuration>
                                <sourceDirectory>${project.basedir}/src/main/schemas
                                </sourceDirectory>
                                <outputDirectory>${project.build.directory}/generated-sources/avro
                                </outputDirectory>
                                <stringType>charsequence</stringType>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven.jar.plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>${maven.exec.plugin.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>java</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- license plugin -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <version>${maven.license.plugin.version}</version>
                    <configuration>
                        <licenseName>${license.licensename}</licenseName>
                        <outputDirectory>${project.basedir}</outputDirectory>
                        <thirdPartyFilename>NOTICE.txt</thirdPartyFilename>
                        <verbose>false</verbose>
                        <processStartTag>
                            ========================LICENSE_START=================================
                        </processStartTag>
                        <processEndTag>
                            =========================LICENSE_END==================================
                        </processEndTag>
                        <includes>
                            <includes>**/*.java</includes>
                        </includes>
                        <skipUpdateLicense>false</skipUpdateLicense>
                        <trimHeaderLine>true</trimHeaderLine>
                    </configuration>
                    <executions>
                        <execution>
                            <id>add-third-party-license</id>
                            <goals>
                                <goal>add-third-party</goal>
                            </goals>
                            <phase>generate-resources</phase>
                            <configuration>
                                <excludedScopes>system,test</excludedScopes>
                            </configuration>
                        </execution>
                        <execution>
                            <id>verify-license-headers</id>
                            <goals>
                                <goal>check-file-header</goal>
                            </goals>
                            <phase>process-sources</phase>
                        </execution>
                        <execution>
                            <id>generate-license-headers</id>
                            <goals>
                                <goal>update-file-header</goal>
                            </goals>
                            <phase>process-sources</phase>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>${maven.versions.plugin.version}</version>
                    <configuration>
                        <allowMajorUpdates>false</allowMajorUpdates>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven.resources.plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${maven.jacoco.plugin.version}</version>
                    <executions>
                        <execution>
                            <id>prepare-agent</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>report</id>
                            <phase>test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${maven.enforcer.plugin.version}</version>
                    <executions>
                        <execution>
                            <id>enforce</id>
                            <configuration>
                                <skip>true</skip>
                                <rules>
                                    <dependencyConvergence/>
                                </rules>
                            </configuration>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <source>${java.source.version}</source>
                    <target>${java.target.version}</target>
                    <release>${java.release.version}</release>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven.javadoc.plugin.version}</version>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>license-maven-plugin</artifactId>
            </plugin>
        </plugins>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>
    </build>

    <distributionManagement>
        <snapshotRepository>
            <id>snapshots</id>
            <!--suppress UnresolvedMavenProperty -->
            <url>${axual.maven.repository.url.snapshots}</url>
        </snapshotRepository>
        <repository>
            <id>releases</id>
            <!--suppress UnresolvedMavenProperty -->
            <url>${axual.maven.repository.url.releases}</url>
        </repository>
    </distributionManagement>
</project>
