# Demonstrates generating events for windowed processing
streams:
  user_events:
    topic: user_events
    keyType: string
    valueType: json  # Using JSON for readability in Kowl UI

functions:
  generate_user_event:
    type: generator
    globalCode: |
      import time
      import random
      
      # Simulate events from 5 different users
      users = ["user1", "user2", "user3", "user4", "user5"]
      event_types = ["click", "view", "purchase"]
      
      def get_user_event():
        user = random.choice(users)
        event_type = random.choice(event_types)
        
        event = {
          "user": user,
          "type": event_type,
          "timestamp": int(time.time() * 1000)
        }
        
        return (user, event)  # Key by user for windowing
    code: |
      return get_user_event()
    resultType: (string, json)

producers:
  event_producer:
    to: user_events
    interval: 1000  # Generate event every second
    generator: generate_user_event