# Demonstrates chaining multiple format conversions in KSML
# 
# This example shows how to chain multiple convertValue operations
# to transform data through several formats in a single pipeline.

streams:
  json_input:
    topic: multi_format_data
    keyType: string
    valueType: json
    offsetResetPolicy: earliest
  
  final_output:
    topic: final_output
    keyType: string
    valueType: string

pipelines:
  multi_format_conversion:
    from: json_input
    via:
      # Starting with JSON format
      - type: peek
        forEach:
          code: |
            log.info("Step 1 - JSON input: id={}, product={}, price=${}", 
                     value.get("id"), value.get("product"), value.get("price"))
      
      # Convert JSON to String (serialization)
      - type: convertValue
        into: string
      
      - type: peek
        forEach:
          code: |
            log.info("Step 2 - Converted to String: {}", value[:80])
      
      # Convert String back to JSON (parsing)
      - type: convertValue
        into: json
      
      - type: peek
        forEach:
          code: |
            log.info("Step 3 - Parsed back to JSON: available={}, quantity={}", 
                     value.get("available"), value.get("quantity"))
      
      # Transform the data while in JSON format
      - type: transformValue
        mapper:
          type: valueTransformer
          code: |
            # Calculate total value and add metadata
            result = {
              "product_id": f"PRD-{value.get('id'):04d}",
              "name": value.get("product", "").upper(),
              "total_value": value.get("price", 0) * value.get("quantity", 0),
              "in_stock": value.get("available", False),
              "processed_at": int(time.time())
            }
          expression: result
          resultType: json
          globalCode: |
            import time
      
      - type: peek
        forEach:
          code: |
            log.info("Step 4 - Transformed data: product_id={}, total_value=${}", 
                     value.get("product_id"), value.get("total_value"))
      
      # Final conversion to String for output
      - type: convertValue
        into: string
      
      - type: peek
        forEach:
          code: |
            log.info("Step 5 - Final String output: {}", value)
    
    # Output as string format
    to: final_output