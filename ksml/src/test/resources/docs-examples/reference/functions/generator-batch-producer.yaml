# $schema: https://axual.github.io/ksml/latest/ksml-language-spec.json

# This example shows how to generate multiple messages (batch) from a single generator call

functions:
  generate_sensordata_batch:
    type: generator
    globalCode: |
      import time
      import random
    code: |
      result = []

      # Generate 10 new messages in a single call
      for sensorCounter in range(10):
        key = "sensor"+str(sensorCounter)           # Set the key to return ("sensor0" to "sensor9")

        # Generate some random sensor measurement data
        types = { 0: { "type": "AREA", "unit": random.choice([ "m2", "ft2" ]), "value": str(random.randrange(1000)) },
                  1: { "type": "HUMIDITY", "unit": random.choice([ "g/m3", "%" ]), "value": str(random.randrange(100)) },
                  2: { "type": "LENGTH", "unit": random.choice([ "m", "ft" ]), "value": str(random.randrange(1000)) },
                  3: { "type": "STATE", "unit": "state", "value": random.choice([ "off", "on" ]) },
                  4: { "type": "TEMPERATURE", "unit": random.choice([ "C", "F" ]), "value": str(random.randrange(-100, 100)) }
                }

        # Build the result value using any of the above measurement types
        value = { "name": key, "timestamp": str(round(time.time()*1000)), **random.choice(types) }
        value["color"] = random.choice([ "black", "blue", "red", "yellow", "white" ])
        value["owner"] = random.choice([ "Alice", "Bob", "Charlie", "Dave", "Evan" ])
        value["city"] = random.choice([ "Amsterdam", "Xanten", "Utrecht", "Alkmaar", "Leiden" ])

        if random.randrange(10) == 0:
          key = None
        if random.randrange(10) == 0:
          value = None
        result = result + [(key,value)]
    expression: result                            # Return a list of messages
    resultType: list(tuple(string, json))         # The result type is a list of key/value tuples

producers:
  # Produce batch of sensor data messages every 3 seconds
  sensordata_batch_producer:
    generator: generate_sensordata_batch
    interval: 3s
    to:
      topic: sensor_data
      keyType: string
      valueType: json
