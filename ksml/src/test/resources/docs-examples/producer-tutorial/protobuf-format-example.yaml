functions:
  generate_protobuf_data:
    type: generator
    globalCode: |
      import time
      import random
    code: |
      # Generate as JSON, KSML will convert to Protobuf
      data = {
        "name": "sensor1",
        "timestamp": str(round(time.time() * 1000)),
        "value": str(random.randint(0, 100))
      }
      return ("sensor1", data)
    resultType: (string, json)

producers:
  protobuf_producer:
    generator: generate_protobuf_data
    interval: 3s
    to:
      topic: my_topic
      keyType: string
      valueType: protobuf:sensor_data  # Protobuf message type
