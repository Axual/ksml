functions:
  generate_sensor_reading:
    type: generator
    globalCode: |
      import random
      import time
      reading_counter = 0
      sensors = ["temp_01", "temp_02", "humidity_01", "pressure_01"]
    code: |
      global reading_counter, sensors
      
      reading_counter += 1
      sensor_id = random.choice(sensors)
      
      # Generate realistic sensor values
      if "temp" in sensor_id:
        value_reading = round(random.uniform(18.0, 25.0), 2)
        unit = "celsius"
      elif "humidity" in sensor_id:
        value_reading = round(random.uniform(30.0, 70.0), 1)
        unit = "percent"
      else:  # pressure
        value_reading = round(random.uniform(1010.0, 1030.0), 1)
        unit = "hPa"
      
      value = {
        "reading_id": reading_counter,
        "sensor_id": sensor_id,
        "value": value_reading,
        "unit": unit,
        "timestamp": int(time.time() * 1000)
      }
      
      key = sensor_id
    expression: (key, value)
    resultType: (string, json)

producers:
  sensor_producer:
    generator: generate_sensor_reading
    interval: 2s
    to:
      topic: sensor_readings
      keyType: string
      valueType: json